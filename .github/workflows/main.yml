name: CI-CD

on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            packages: write
        env:
            GITHUB_REPOSITORY_TO_LOWERCASE: echo "GITHUB_REPOSITORY_TO_LOWERCASE=$(echo '{{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        strategy:
            matrix:
                include:
                    - cible: 'frontend'
                      full_image_name: ghcr.io/$GITHUB_REPOSITORY_TO_LOWERCASE/frontend
                    - cible: 'node-api'
                      full_image_name: ghcr.io/$GITHUB_REPOSITORY_TO_LOWERCASE/node-api
        steps:
            # CHECKOUT - https://github.com/actions/checkout
            # ------------------------------------------------------------------------------------------------------
            # Utilise l'action GitHub 'checkout' pour cloner le code source du dépôt dans l'environnement de build.
            - name: Clonage du code source avec l'action checkout
              uses: actions/checkout@v4

            # QEMU - https://github.com/docker/setup-qemu-action
            # ------------------------------------------------------------------------------------------------------
            # Configure QEMU pour supporter les architectures matérielles multiples dans le processus de build.
            - name: Configuration de QEMU
              uses: docker/setup-qemu-action@v3

            # BUILDX - https://github.com/docker/setup-buildx-action
            # ------------------------------------------------------------------------------------------------------
            # Met en place Docker Buildx pour améliorer les builds Docker avec des fonctionnalités avancées,
            # telles que la mise en cache.
            - name: Mise en place de Docker Buildx
              uses: docker/setup-buildx-action@v3

            # LOGIN-ACTION - https://github.com/docker/login-action
            # ------------------------------------------------------------------------------------------------------
            # Authentification sécurisée au Github Container Registry pour permettre le push des images Docker.
            - name: Authentification au Github Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor}}
                  password: ${{ secrets.GITHUB_TOKEN }}

            # METADATA-ACTION - https://github.com/docker/metadata-action/
            # ------------------------------------------------------------------------------------------------------
            # Utilise l'action 'docker/metadata-action' pour créer des métadonnées pertinentes pour l'image Docker.
            - name: Génération des métadonnées pour l'image Docker
              id: metadata
              uses: docker/metadata-action@v5
              with:
                  images: ${{ matrix.full_image_name }}

            # BUILD-PUSH-ACTION - https://github.com/docker/build-push-action
            # ------------------------------------------------------------------------------------------------------
            # Construit l'image Docker à partir du Dockerfile et la pousse vers le registre spécifié,
            # avec gestion de la mise en cache.
            - name: Build et push de l'image Docker
              uses: docker/build-push-action@v5
              with:
                  push: true
                  tags: ${{ matrix.full_image_name }}:latest
                  context: ./${{ matrix.cible }}
                  cache-from: type=gha # gha = Permet de spécifier où sont stockés les images. (Ici dans github Actions "gha")
                  cache-to: type=gha,mode=max # Force la mise à jour du cache qui permet d'avoir toujours un cache à jour
